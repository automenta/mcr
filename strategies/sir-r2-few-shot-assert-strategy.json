{
	"id": "SIR-R2-FewShot-Assert",
	"name": "SIR-R2 Few-Shot Assertion Strategy",
	"description": "Uses a few-shot learning approach with SIR for asserting facts and rules. Converts Natural Language to SIR (few-shot), then SIR to Prolog.",
	"result_variable": "prolog_clauses",
	"nodes": [
		{
			"id": "step1_nl_to_sir_llm_few_shot",
			"type": "LLM_Call",
			"prompt_template_name": "NL_TO_SIR_ASSERT_FEWSHOT",
			"model": "{{llm_model_id}}",
			"output_variable": "sir_json_string"
		},
		{
			"id": "step2_parse_sir_json",
			"type": "Parse_JSON",
			"input_variable": "sir_json_string",
			"output_variable": "sir_json_object"
		},
		{
			"id": "step3_sir_to_prolog",
			"type": "SIR_To_Prolog",
			"input_variable": "sir_json_object",
			"output_variable": "prolog_clauses"
		}
	],
	"edges": [
		{
			"from": "step1_nl_to_sir_llm_few_shot",
			"to": "step2_parse_sir_json"
		},
		{
			"from": "step2_parse_sir_json",
			"to": "step3_sir_to_prolog"
		}
	]
}
